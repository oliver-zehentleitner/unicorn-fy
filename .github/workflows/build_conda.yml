name: Build and Publish Anaconda

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  build_conda_packages:
    name: Build conda on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-14]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          - python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          miniconda-version: "latest"
          auto-update-conda: false
          auto-activate-base: true
          show-channel-urls: true

      - name: Create Conda Env
        run: |
          conda create -y -n buildenv python=${{ matrix.python-version }} pip
          conda config --set solver classic

      - name: Inject dummy virtual packages
        run: |
          echo "__glibc: [2.17]" > conda_build_config.yaml
          echo "__linux: [1]" >> conda_build_config.yaml
          echo "__unix: [1]" >> conda_build_config.yaml
          echo "__conda: [1]" >> conda_build_config.yaml
          echo "__archspec: [\"x86_64\"]" >> conda_build_config.yaml

      - name: Show Conda Info
        run: |
          conda info
          conda config --show
          conda list

      - name: Build with conda-build
        shell: bash
        run: |
          OS_NAME="$(uname)"
          if [[ "$OS_NAME" == "MINGW"* || "$OS_NAME" == "MSYS"* || "$OS_NAME" == "CYGWIN"* ]]; then
            eval "$(C:/Miniconda3/Scripts/conda.exe shell.bash hook)"
          else
            source "$(conda info --base)/etc/profile.d/conda.sh"
          fi
      
          conda activate buildenv
      
          pip install Cython requests ujson setuptools wheel
          conda install -c conda-forge conda-build conda-verify anaconda-client
          
          echo "===== DEBUG: Conda env location ====="
          which conda
          echo "===== DEBUG: Python version ====="
          python --version
          echo "===== DEBUG: Conda list ====="
          conda list
          echo "===== DEBUG: Current directory ====="
          pwd
          echo "===== DEBUG: Files in current directory ====="
          ls -la
          echo "===== DEBUG: Content of conda_build_config.yaml ====="
          cat conda_build_config.yaml || echo "conda_build_config.yaml not found!"
          echo "===== DEBUG: meta.yaml ====="
          cat meta.yaml || echo "meta.yaml not found!"
          echo "===== DEBUG: Conda config sources ====="
          conda config --show-sources

          conda build -c conda-forge -c defaults --no-verify --no-test --no-anaconda-upload --keep-old-work --variant-config-files conda_build_config.yaml .

      - name: Install macOS SDK (only on macOS)
        if: runner.os == 'macOS'
        run: |
          sudo mkdir -p /opt/MacOSX10.10.sdk
          sudo curl -L -o MacOSX10.10.sdk.tar.xz https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.10.sdk.tar.xz
          sudo tar -xJf MacOSX10.10.sdk.tar.xz -C /opt/

      - name: Set CONDA_BUILD_SYSROOT (only on macOS)
        if: runner.os == 'macOS'
        run: |
          echo "CONDA_BUILD_SYSROOT: /opt/MacOSX10.10.sdk # [osx]" >> conda_build_config.yaml

      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@v1.2.0
        with:
          meta_yaml_dir: .
          overwrite: False
          python-version: ${{ matrix.python-version }}
          user: lucit
          label: main
          token: ${{ secrets.ANACONDA_API_TOKEN }}
